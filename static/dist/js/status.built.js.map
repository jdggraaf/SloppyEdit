{"version":3,"sources":["../../js/status.js"],"names":["rawDataIsLoading","statusPagePassword","groupByWorker","showHashTable","showWorkersTable","hashkeys","minUpdateDelay","lastRawUpdateTime","Date","getFormattedDate","unFormattedDate","moment","format","addMainWorker","hash","worker","$","appendTo","addTable","processMainWorker","i","hashFnv32a","length","html","replace","addWorker","mainWorkerHash","workerHash","row","addHashtable","mainKeyHash","keyHash","hashrow","processWorker","lastModified","processHashKeys","hashkey","key","createHashTable","keyValues","samples","nextSampleIndex","writeIndex","numSamples","sumSamples","j","usage","Math","max","lastUpdated","expires","unix","isSameOrAfter","toFixed","parseResult","result","each","main_workers","workers","hashtable","prepend","find","click","sortHashTable","parents","first","comparator","compareHashTable","index","toArray","sort","asc","reverse","append","getHashtableValue","children","eq","table","tableSort","compare","rows","getCellValue","a","b","valA","valB","isNumeric","localeCompare","updateStatus","loadRawData","done","always","diff","delay","window","setTimeout","str","asString","seed","l","hval","undefined","charCodeAt","toString","substr","ajax","url","type","data","dataType","beforeSend","complete","document","ready","focus","submit","event","preventDefault","val","login","remove","effect","change","checked"],"mappings":"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","file":"status.built.js","sourcesContent":["/* Main stats page */\nvar rawDataIsLoading = false\nvar statusPagePassword = false\nvar groupByWorker = true\nvar showHashTable = true\nvar showWorkersTable = true\nvar hashkeys = {}\n\n// Raw data updating\nvar minUpdateDelay = 1000 // Minimum delay between updates (in ms).\nvar lastRawUpdateTime = new Date()\n\nfunction getFormattedDate(unFormattedDate) { // eslintrc no-undef.\n    // Use YYYY-MM-DD HH:MM:SS formatted dates to enable simple sorting.\n    return moment(unFormattedDate).format('YYYY-MM-DD HH:mm:ss')\n}\n\n/*\n * Workers\n */\nfunction addMainWorker(hash) {\n    var worker = `\n     <div id=\"worker_${hash}\" class=\"worker\">\n       <span id=\"name_${hash}\" class=\"name\"></span>\n       <span id=\"method_${hash}\" class=\"method\"></span>\n       <span id=\"message_${hash}\" class=\"message\"></span>\n     </div>\n   `\n\n    $(worker).appendTo('#status_container')\n    addTable(hash)\n}\n\nfunction processMainWorker(i, worker) {\n    var hash = hashFnv32a(worker['worker_name'], true)\n\n    if ($('#worker_' + hash).length === 0) {\n        addMainWorker(hash)\n    }\n\n\n    $('#name_' + hash).html(worker['worker_name'])\n    $('#method_' + hash).html('(' + worker['method'] + ')')\n    $('#message_' + hash).html(worker['message'].replace(/\\n/g, '<br>'))\n}\n\nfunction addWorker(mainWorkerHash, workerHash) {\n    var row = `\n     <div id=\"row_${workerHash}\" class=\"status_row\">\n       <div id=\"username_${workerHash}\" class=\"status_cell\"/>\n       <div id=\"success_${workerHash}\"  class=\"status_cell\"/>\n       <div id=\"fail_${workerHash}\"     class=\"status_cell\"/>\n       <div id=\"no_items_${workerHash}\"  class=\"status_cell\"/>\n       <div id=\"skip_${workerHash}\"     class=\"status_cell\"/>\n       <div id=\"captchas_${workerHash}\" class=\"status_cell\"/>\n       <div id=\"lastmod_${workerHash}\"  class=\"status_cell\"/>\n       <div id=\"message_${workerHash}\"  class=\"status_cell\"/>\n     </div>\n   `\n    $(row).appendTo('#table_' + mainWorkerHash)\n}\n\nfunction addHashtable(mainKeyHash, keyHash) {\n    var hashrow = `\n    <div id=\"hashrow_${keyHash}\" class=\"status_row\">\n      <div id=\"key_${keyHash}\" class=\"status_cell\"/>\n      <div id=\"maximum_${keyHash}\" class=\"status_cell\"/>\n      <div id=\"remaining_${keyHash}\" class=\"status_cell\"/>\n      <div id=\"usage_${keyHash}\" class=\"status_cell\"/>\n      <div id=\"peak_${keyHash}\" class=\"status_cell\"/>\n      <div id=\"expires_${keyHash}\" class=\"status_cell\"/>\n      <div id=\"last_updated_${keyHash}\" class=\"status_cell\"/>\n    </div>\n    `\n    $(hashrow).appendTo('#hashtable_' + mainKeyHash)\n}\n\nfunction processWorker(i, worker) {\n    var hash = hashFnv32a(worker['username'], true)\n    var mainWorkerHash\n    if (groupByWorker) {\n        mainWorkerHash = hashFnv32a(worker['worker_name'], true)\n        if ($('#table_' + mainWorkerHash).length === 0) {\n            return\n        }\n    } else {\n        mainWorkerHash = 'global'\n        if ($('#table_global').length === 0) {\n            addTable('global')\n        }\n    }\n\n    if ($('#row_' + hash).length === 0) {\n        addWorker(mainWorkerHash, hash)\n    }\n\n    var lastModified = getFormattedDate(new Date(worker['last_modified']))\n\n    $('#username_' + hash).html(worker['username'])\n    $('#success_' + hash).html(worker['success'])\n    $('#fail_' + hash).html(worker['fail'])\n    $('#no_items_' + hash).html(worker['no_items'])\n    $('#skip_' + hash).html(worker['skip'])\n    $('#captchas_' + hash).html(worker['captcha'])\n    $('#lastmod_' + hash).html(lastModified)\n    $('#message_' + hash).html(worker['message'])\n}\n\nfunction processHashKeys(i, hashkey) {\n    var key = hashkey['key']\n    var keyHash = hashFnv32a(key, true)\n    if ($('#hashtable_global').length === 0) {\n        createHashTable('global')\n    }\n\n    if ($('#hashrow_' + keyHash).length === 0) {\n        addHashtable('global', keyHash)\n        var keyValues = {\n            samples: [],\n            nextSampleIndex: 0\n        }\n\n        hashkeys[key] = keyValues\n    }\n\n    // Calculate average value for Hash keys.\n    var writeIndex = hashkeys[key].nextSampleIndex % 60\n    hashkeys[key].nextSampleIndex += 1\n    hashkeys[key].samples[writeIndex] = hashkey['maximum'] - hashkey['remaining']\n    var numSamples = hashkeys[key].samples.length\n    var sumSamples = 0\n    for (var j = 0; j < numSamples; j++) {\n        sumSamples += hashkeys[key].samples[j]\n    }\n\n    var usage = sumSamples / Math.max(numSamples, 1) // Avoid division by zero.\n\n    var lastUpdated = getFormattedDate(new Date(hashkey['last_updated']))\n    var expires = getFormattedDate(new Date(hashkey['expires']))\n    if (!moment(expires).unix()) {\n        expires = 'Unknown/Invalid'\n    } else if (moment().isSameOrAfter(moment(expires))) {\n        expires = 'Expired'\n    }\n\n    $('#key_' + keyHash).html(key)\n    $('#maximum_' + keyHash).html(hashkey['maximum'])\n    $('#remaining_' + keyHash).html(hashkey['remaining'])\n    $('#usage_' + keyHash).html(usage.toFixed(2))\n    $('#peak_' + keyHash).html(hashkey['peak'])\n    $('#last_updated_' + keyHash).html(lastUpdated)\n    $('#expires_' + keyHash).html(expires)\n}\n\nfunction parseResult(result) {\n    if (groupByWorker && showWorkersTable) {\n        $.each(result.main_workers, processMainWorker)\n    }\n    if (showWorkersTable) {\n        $.each(result.workers, processWorker)\n    }\n    if (showHashTable) {\n        $.each(result.hashkeys, processHashKeys)\n    }\n}\n/*\n * Tables\n */\nfunction createHashTable(mainKeyHash) {\n    var hashtable = `\n    <div class=\"status_table\" id=\"hashtable_${mainKeyHash}\">\n     <div class=\"status_row header\">\n     <div class=\"status_cell\">\n       Hash Keys\n      </div>\n      <div class=\"status_cell\">\n        Maximum RPM\n      </div>\n      <div class=\"status_cell\">\n        RPM Left\n      </div>\n      <div class=\"status_cell\">\n        Usage\n        </div>\n      <div class=\"status_cell\">\n        Peak\n        </div>\n       <div class=\"status_cell\">\n         Expires At\n       </div>\n       <div class=\"status_cell\">\n         Last Modified\n       </div>\n     </div>\n   </div>`\n\n    hashtable = $(hashtable)\n    $('#status_container').prepend(hashtable)\n    $(hashtable).find('.status_row.header .status_cell').click(sortHashTable)\n}\n\nfunction sortHashTable() {\n    var hashtable = $(this).parents('.status_table').first()\n    var comparator = compareHashTable($(this).index())\n    var hashrow = hashtable.find('.status_row:gt(0)').toArray()\n    // Sort the array.\n    hashrow.sort(comparator)\n    this.asc = !this.asc\n    if (!this.asc) {\n        hashrow = hashrow.reverse()\n    }\n    for (var i = 0; i < hashrow.length; i++) {\n        hashtable.append(hashrow[i])\n    }\n}\n\nfunction getHashtableValue(hashrow, index) {\n    return $(hashrow).children('.status_cell').eq(index).html()\n}\n\nfunction addTable(hash) {\n    var table = `\n     <div class=\"status_table\" id=\"table_${hash}\">\n       <div class=\"status_row header\">\n         <div class=\"status_cell\">\n           Username\n         </div>\n         <div class=\"status_cell\">\n           Success\n         </div>\n         <div class=\"status_cell\">\n           Fail\n         </div>\n         <div class=\"status_cell\">\n           No Items\n         </div>\n         <div class=\"status_cell\">\n           Skipped\n         </div>\n         <div class=\"status_cell\">\n           Captchas\n         </div>\n         <div class=\"status_cell\">\n           Last Modified\n         </div>\n         <div class=\"status_cell\">\n           Message\n         </div>\n       </div>\n     </div>`\n\n    table = $(table)\n    table.appendTo('#status_container')\n    table.find('.status_row.header .status_cell').click(tableSort)\n}\n\nfunction tableSort() {\n    var table = $(this).parents('.status_table').first()\n    var comparator = compare($(this).index())\n    var rows = table.find('.status_row:gt(0)').toArray()\n    // Sort the array.\n    rows.sort(comparator)\n    this.asc = !this.asc\n    if (!this.asc) {\n        rows = rows.reverse()\n    }\n    for (var i = 0; i < rows.length; i++) {\n        table.append(rows[i])\n    }\n}\n\nfunction getCellValue(row, index) {\n    return $(row).children('.status_cell').eq(index).html()\n}\n\n/*\n * Helpers\n */\nfunction compare(index) {\n    return function (a, b) {\n        var valA = getCellValue(a, index)\n        var valB = getCellValue(b, index)\n        return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.localeCompare(valB)\n    }\n}\n\nfunction compareHashTable(index) {\n    return function (a, b) {\n        var valA = getHashtableValue(a, index)\n        var valB = getHashtableValue(b, index)\n        return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.localeCompare(valB)\n    }\n}\n\nfunction updateStatus() {\n    lastRawUpdateTime = new Date()\n    loadRawData().done(function (result) {\n        // Parse result on success.\n        parseResult(result)\n    }).always(function () {\n        // Only queue next request when previous is over.\n        // Minimum delay of minUpdateDelay.\n        var diff = new Date() - lastRawUpdateTime\n        var delay = Math.max(minUpdateDelay - diff, 1) // Don't go below 1.\n\n        // Don't use interval.\n        window.setTimeout(updateStatus, delay)\n    })\n}\n\n/**\n * Calculate a 32 bit FNV-1a hash\n * Found here: https://gist.github.com/vaiorabbit/5657561\n * Ref.: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param {string} str the input value\n * @param {boolean} [asString=false] set to true to return the hash value as\n *     8-digit hex string instead of an integer\n * @param {integer} [seed] optionally pass the hash of the previous chunk\n * @returns {integer | string}\n */\nfunction hashFnv32a(str, asString, seed) {\n    /* jshint bitwise:false */\n    var i\n    var l\n    var hval = (seed === undefined) ? 0x811c9dc5 : seed\n\n    for (i = 0, l = str.length; i < l; i++) {\n        hval ^= str.charCodeAt(i)\n        hval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24)\n    }\n\n    if (asString) {\n        // Convert to 8 digit hex string\n        return ('0000000' + (hval >>> 0).toString(16)).substr(-8)\n    }\n    return hval >>> 0\n}\n\nfunction loadRawData() {\n    return $.ajax({\n        url: 'status',\n        type: 'post',\n        data: {\n            'password': statusPagePassword\n        },\n        dataType: 'json',\n        beforeSend: function () {\n            if (rawDataIsLoading) {\n                return false\n            } else {\n                rawDataIsLoading = true\n            }\n        },\n        complete: function () {\n            rawDataIsLoading = false\n        }\n    })\n}\n\n\n/*\n * Document ready\n */\n$(document).ready(function () {\n    // Set focus on password field.\n    $('#password').focus()\n\n    // Register to events.\n    $('#password_form').submit(function (event) {\n        event.preventDefault()\n\n        statusPagePassword = $('#password').val()\n\n        loadRawData().done(function (result) {\n            if (result.login === 'ok') {\n                $('.status_form').remove()\n                parseResult(result)\n                window.setTimeout(updateStatus, minUpdateDelay)\n            } else {\n                $('.status_form').effect('bounce')\n                $('#password').focus()\n            }\n        })\n    })\n\n    $('#groupbyworker-switch').change(function () {\n        groupByWorker = this.checked\n\n        $('#status_container .status_table').remove()\n        $('#status_container .worker').remove()\n    })\n\n    $('#hashkey-switch').change(function () {\n        showHashTable = this.checked\n\n        $('#status_container .status_table').remove()\n        $('#status_container .worker').remove()\n    })\n\n    $('#showworker-switch').change(function () {\n        showWorkersTable = this.checked\n\n        $('#status_container .status_table').remove()\n        $('#status_container .worker').remove()\n    })\n})\n"]}